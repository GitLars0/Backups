// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UiS.Dat240.Lab3.Infrastructure.Data;

#nullable disable

namespace UiS.Dat240.Lab3.Migrations
{
    [DbContext(typeof(ShopContext))]
    [Migration("20241023210408_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("UiS.Dat240.Lab3.Core.Domain.Cart.CartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ShoppingCartId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Sku")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("CartItem");
                });

            modelBuilder.Entity("UiS.Dat240.Lab3.Core.Domain.Cart.ShoppingCart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ShoppingCart");
                });

            modelBuilder.Entity("UiS.Dat240.Lab3.Core.Domain.Fulfillment.Offer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ReimbursementId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ShipperId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ReimbursementId");

                    b.HasIndex("ShipperId");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("UiS.Dat240.Lab3.Core.Domain.Fulfillment.Reimbursement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("InvoiceId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ShipperId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Reimbursement");
                });

            modelBuilder.Entity("UiS.Dat240.Lab3.Core.Domain.Fulfillment.Shipper", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Shipper");
                });

            modelBuilder.Entity("UiS.Dat240.Lab3.Core.Domain.Invoicing.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("UiS.Dat240.Lab3.Core.Domain.Ordering.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("UiS.Dat240.Lab3.Core.Domain.Ordering.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("UiS.Dat240.Lab3.Core.Domain.Ordering.OrderLine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemName")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderLine");
                });

            modelBuilder.Entity("UiS.Dat240.Lab3.Core.Domain.Products.FoodItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CookTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FoodItems");
                });

            modelBuilder.Entity("UiS.Dat240.Lab3.Core.Domain.Cart.CartItem", b =>
                {
                    b.HasOne("UiS.Dat240.Lab3.Core.Domain.Cart.ShoppingCart", null)
                        .WithMany("Items")
                        .HasForeignKey("ShoppingCartId");
                });

            modelBuilder.Entity("UiS.Dat240.Lab3.Core.Domain.Fulfillment.Offer", b =>
                {
                    b.HasOne("UiS.Dat240.Lab3.Core.Domain.Fulfillment.Reimbursement", "Reimbursement")
                        .WithMany()
                        .HasForeignKey("ReimbursementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UiS.Dat240.Lab3.Core.Domain.Fulfillment.Shipper", "Shipper")
                        .WithMany()
                        .HasForeignKey("ShipperId");

                    b.Navigation("Reimbursement");

                    b.Navigation("Shipper");
                });

            modelBuilder.Entity("UiS.Dat240.Lab3.Core.Domain.Invoicing.Invoice", b =>
                {
                    b.HasOne("UiS.Dat240.Lab3.Core.Domain.Ordering.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("UiS.Dat240.Lab3.Core.Domain.Ordering.Location", "Address", b1 =>
                        {
                            b1.Property<Guid>("InvoiceId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Building")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Notes")
                                .HasColumnType("TEXT");

                            b1.Property<string>("RoomNumber")
                                .HasColumnType("TEXT");

                            b1.HasKey("InvoiceId");

                            b1.ToTable("Invoices");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("UiS.Dat240.Lab3.Core.Domain.Ordering.Order", b =>
                {
                    b.HasOne("UiS.Dat240.Lab3.Core.Domain.Ordering.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("UiS.Dat240.Lab3.Core.Domain.Ordering.Location", "Location", b1 =>
                        {
                            b1.Property<Guid>("OrderId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Building")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Notes")
                                .HasColumnType("TEXT");

                            b1.Property<string>("RoomNumber")
                                .HasColumnType("TEXT");

                            b1.HasKey("OrderId");

                            b1.ToTable("Orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderId");
                        });

                    b.Navigation("Customer");

                    b.Navigation("Location")
                        .IsRequired();
                });

            modelBuilder.Entity("UiS.Dat240.Lab3.Core.Domain.Ordering.OrderLine", b =>
                {
                    b.HasOne("UiS.Dat240.Lab3.Core.Domain.Ordering.Order", null)
                        .WithMany("OrderLines")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("UiS.Dat240.Lab3.Core.Domain.Cart.ShoppingCart", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("UiS.Dat240.Lab3.Core.Domain.Ordering.Order", b =>
                {
                    b.Navigation("OrderLines");
                });
#pragma warning restore 612, 618
        }
    }
}
